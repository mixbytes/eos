language: c
git:
  depth: false
services:
  - docker
before_install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
cache:
  directories:
    - $HOME/.ccache
    - $HOME/.docker
  timeout: 1000
matrix:
  fast_finish: true
jobs:
  include:
    - stage: build
      script:
        - set -e
        - cp -r $HOME/.ccache .ccache #copy cache into build context
        - docker build --build-arg registry=mixbytes -t tmp-builder -f Docker/Dockerfile --target builder .
        - docker run --rm -v $HOME/.ccache:/out tmp-builder /bin/bash -c "cp -r /haya/.ccache/* /out" #save updated cache
        - docker build --build-arg registry=mixbytes -t tmp-tester -f Docker/Dockerfile --target tester . #build image for tests
        - docker build --build-arg registry=mixbytes -t mixbytes/haya:$TRAVIS_BRANCH -f Docker/Dockerfile . #build main image
        - docker save tmp-tester > $HOME/.docker/tmp-tester.tar #save test image
        - docker save mixbytes/haya > $HOME/.docker/haya.tar #save main image

    - stage: tests
      script:
        - set -e
        - docker load --input $HOME/.docker/tmp-tester.tar #load test image
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker run tmp-tester /bin/bash -c 'cd /tmp/build && ctest -R "simulator|unit_test"'; fi
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then docker run tmp-tester /bin/bash -c 'cd /tmp/build && ctest -R "simulator|unit_test|nodeos_sanity|nodeos_run" -E "mongo"'; fi

    - stage: push image
      script:
        - set -e
        - docker load --input $HOME/.docker/haya.tar #load main image
        - docker push mixbytes/haya:$TRAVIS_BRANCH #push main image to registry
        - |
          if [ $TRAVIS_BRANCH == "master" ]; then
            docker tag mixbytes/haya:master mixbytes/haya:latest
            docker push mixbytes/haya:latest
          fi
        - rm -rf $HOME/.docker/* #remove all images

